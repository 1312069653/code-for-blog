(string 2)
(str 2)
(+ "2" "3")
(str "2" "3")
(ns expression.multimethod)
(evaluate (BinaryPlus. (Constant. 1.1) (Constant 2.2)))
(use 'expression.multimethod)
(evaluate (BinaryPlus. (Constant. 1.1) (Constant 2.2)))
(ns 'user)
(use 'expression.multimethod)
(evaluate)
(evaluate (BinaryPlus. (Constant. 1.1) (Constant 2.2)))
evaluate
Constant
expression.multimethod/->Constant
(expression.multimethod/->Constant 1.1)
(->Constant 1.1)
(evaluate (->BinaryPlus (->Constant 1.1) (->Constant 2.2)))
(stringify (->BinaryPlus (->Constant 1.1) (->Constant 2.2)))
(name ->BinaryPlus)
(:name (meta ->BinaryPlus))
(str ->BinaryPlus)
(clojure.repl/demunge (str ->BinaryPlus))
(defn twice [x] (* x 2))
(use 'expression.multimethod :reload-all)
(def fc (->FunctionCall twice (->BinaryPlus (->Constant 1.1) (->Constant 2.2))))
(def callexpr (->FunctionCall twice (->BinaryPlus (->Constant 1.1) (->Constant 2.2))))
(evaluate callexpr)
(stringify callexpr)
